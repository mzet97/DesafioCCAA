name: Docker Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/desafioccaa-api
          tags: |
            type=sha # Gera tag com o SHA curto do commit (ex: sha-7a0d777)
            type=raw,value=latest,enable={{is_default_branch}} # Gera tag 'latest' apenas para a branch padrão (main)

      - name: Verify Dockerfile Path
        run: |
          echo "Current directory: $(pwd)"
          echo "Checking for Dockerfile at relative path: ./src/DesafioCCAA/DesafioCCAA.Api/Dockerfile"
          ls -l ./src/DesafioCCAA/DesafioCCAA.Api/Dockerfile || echo "Relative path not found!"
          echo "Checking for Dockerfile at absolute path: $GITHUB_WORKSPACE/src/DesafioCCAA/DesafioCCAA.Api/Dockerfile"
          ls -l "$GITHUB_WORKSPACE/src/DesafioCCAA/DesafioCCAA.Api/Dockerfile" || echo "Absolute path not found!"
        continue-on-error: true

      - name: Verify Directory Structure
        run: |
          echo "Current directory: $(pwd)"
          echo "--- Listing root directory ---"
          ls -la ./
          echo "--- Listing src directory ---"
          ls -la ./src/ || echo "./src/ not found!"
          echo "--- Listing src/DesafioCCAA directory ---"
          ls -la ./src/DesafioCCAA/ || echo "./src/DesafioCCAA/ not found!"
          echo "--- Listing src/DesafioCCAA/DesafioCCAA.Api directory ---"
          ls -la ./src/DesafioCCAA/DesafioCCAA.Api/ || echo "./src/DesafioCCAA/DesafioCCAA.Api/ not found!"
          echo "--- Searching for Dockerfile ---"
          find . -name Dockerfile -print || echo "Dockerfile not found by find"
        continue-on-error: true # Continua mesmo se um ls falhar

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: ./src/DesafioCCAA/DesafioCCAA.Api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
